name: Rust build and Python install/test
on: [push]
jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Building proj on Windows is a mess, so not enabled yet. https://github.com/georust/proj/pull/79
        build: [linux, macos]
        include:
          - build: linux
            os: ubuntu-latest
          - build: macos
            os: macos-latest

    steps:
      - uses: actions/checkout@master

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
                repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache build
        uses: actions/cache@v2
        with:
                path: target
                # The key could include hashFiles('Cargo.lock'), but cargo will figure out what can be reused.
                key: build-${{ matrix.os }}

      - name: Build
        run: cargo check

  python:
    name: Install and test SPC toolkit for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos]
        include:
          - build: linux
            os: ubuntu-latest
          - build: macos
            os: macos-latest

    defaults:
      run:
        working-directory: ./python

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"

    - name: Bootstrap poetry
      shell: bash
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: Configure poetry
      shell: bash
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      shell: bash
      run: |
        python -m poetry install --extras "dev examples"

    - name: Run tests
      shell: bash
      run: |
        poetry run pytest
